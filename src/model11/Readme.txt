策略设计模式（Strategy Pattern）

定义：定义并封装了一族算法，让他们在运行时可以相互替换。

主要解决：在有多种算法相似的前提下，使用if...else所带来的复杂和难以维护

应用场景举例：

1、促销策略：优惠券策略、返现、拼团等

2、支付策略：支付宝、微信、银联、比特币等

3、Comparator比较器，比如在Arrays.sort(T[] a, Comparator<? super T> c)，根据不同类对象提供
不同的比较策略

策略模式的优缺点：

优点如下：
1、策略模式符合开闭原则
2、策略模式可避免使用多重条件语句如if...else和switch
4、策略模式可提高算法的保密性和安全性

缺点如下：
1、客户端必须知道所有的策略，并自行决定使用哪一个策略
2、代码中会产生非常多的策略类，增加维护难度