Class类

介绍：首先Class类是Java反射机制的基础。其次，Class是一个java类，跟Java API中定义的诸如Thread、Integer类、我们自己定义的类是一样，
也继承了Object（Class是Object的直接子类）。总之，必须明确一点，它其实只是个类，只不过名字比较特殊。

作用：它用于封装被装入到JVM中的类（包括类和接口）的信息，当一个类或接口被装入JVM时（java的虚拟机运行编译好的.class文件）便会产生一个
与之关联的java.lang.Class对象，可以通过这个Class对象对被装入类的详细信息进行访问。

Class对象：Java程序在运行时，Java运行时系统一直对所有的对象进行所谓的运行时类型标识。这项信息纪录了每个对象所属的类。
虚拟机通常使用运行时类型信息选准正确方法去执行，用来保存这些类型信息的类是Class类。Class类封装一个对象和接口运行时的状态，当装载类时，Class类型的对象自动创建。

虚拟机：虚拟机为每种类型管理一个独一无二的Class对象。也就是说，每个类（型）都有一个Class对象。运行程序时，Java虚拟机(JVM)首先检查是否所要加载
的类对应的Class对象是否已经加载。如果没有加载，JVM就会根据类名查找.class文件，并将其Class对象载入。

重点：一般某个类的Class对象被载入内存，它就用来创建这个类的所有对象。事实上，Class对象就是用来创建类的所有的“普通”对象的。
类是程序的一部分，每个类都有一个Class对象。换言之，每当编写并且编译了一个新类，就会产生一个Class对象（恰当地说，是被保存在一个同名的.class文件中）。
在运行时，当我们想生成这个类的对象时，运行这个程序的 Java虚拟机（JVM）首先检查这个类的Class对象是否已经加载。
如果尚未加载，JVM就会根据类名查找.class文件，并将其载入。一旦某个类的Class对象被载入内存，它就被用来创建这个类的所有(实例)对象。



